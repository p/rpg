#!/bin/sh

looking () {
    printf "looking $(echo $@)"
}

ok () {
    printf " OK\n"
}

missing () {
    printf " (missing)\n"
}

found () {
    printf " (${1:-found})"
    test -n "$2" && printf " $2"
    printf "\n"
}

have () {
    for f in "$@"
    do
        _havepath=$(command -v "$f") || { continue; }
        echo "$_havepath"
        return 0
    done
    return 1
}

# Usage: stdutil <name> <variable> <path>...
stdutil () {
    looking "for $1"; shift
    _varname="$1";    shift
    if _path=$(have "$@")
    then found "$_path"
         recordconfig $_varname "$_path"
    else missing
         recordconfig $_varname ""
    fi
    return 0
}

# Build up lists of config stuff to write to config.sh and config.mk
SHCONFIG=
SHALIAS=
MAKECONFIG=
recordconfig () {
    SHCONFIG="$SHCONFIG
$1='$2'"
    SHALIAS="$SHALIAS
alias $1='$2'"
    MAKECONFIG="$MAKECONFIG
$1 = $2"
}

UNAME=$(uname)
HOST=$(hostname)
TIME=$(date)
echo "building for $UNAME on $HOST at $TIME"

looking "for /bin/sh"
SH=$(have /bin/sh) && {
    if expr "$("$SH" --version 2>/dev/null)" : '.*bash' >/dev/null
    then
        found '' "oh ick, it looks like bash"
    else
        found
    fi
} || missing
recordconfig SHELL "$SH"

stdutil bash      DASH       /bin/bash /usr/bin/bash bash
stdutil dash      DASH       /bin/dash /usr/bin/dash dash
stdutil ln        LN         /bin/ln ln gln
stdutil sed       SED        /bin/sed /usr/bin/sed sed gsed
stdutil sort      SORT       /bin/sort /usr/bin/sort sort gsort
stdutil tr        TR         /usr/bin/tr tr gtr
stdutil cut       CUT        /usr/bin/cut cut gcut
stdutil mktemp    MKTEMP     /bin/mktemp mktemp gmktemp
stdutil perl      PERL       perl
stdutil readlink  READLINK   /bin/readlink readlink greadlink
stdutil install   INSTALL    /usr/bin/install install ginstall
stdutil diff      DIFF       diff
stdutil patch     PATCH      patch
stdutil curl      CURL       curl
stdutil ruby      RUBY       ruby
stdutil gem       GEM        gem
stdutil schocco   SHOCCO     shocco
stdutil ronn      RONN       ronn

set -e

echo writing config.mk...
cat <<EOF > config.mk
$MAKECONFIG
EOF

echo writing config.sh...
cat <<EOF > config.sh
# utility locations
$SHCONFIG

# big aliases
$SHALIAS
EOF

echo "done. run \`make' to build and \`make install' to install."
